version: '3.8'
services:
  bot:
    container_name: tg_bot_container
    image: bot_image
    ports:
      - 1560:1560
    environment:
      TOKEN: ${TOKEN}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      RM_HOST: ${RM_HOST}
      RM_PORT: ${RM_PORT}
      RM_USER: ${RM_USER}
      RM_PASSWORD: ${RM_PASSWORD}
      DB_REPL_LOGS: ${DB_REPL_LOGS}
    volumes:
      - replication_log:/logs_ps
    depends_on:
      - db_master
      - db_slave
  
  db_master:
    container_name: db_master_container
    image: db_image
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres
      -c wal_level=replica 
      -c wal_log_hints=on
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
      -c log_replication_commands=on
      -c logging_collector=on
    volumes:
      - replication_log:/var/lib/postgresql/data
  
  db_slave:
    container_name: db_slave_container
    image: db_repl_image
    user: ${DB_USER}
    restart: always
    ports:
      - 5433:5432
    environment:
      PGUSER: ${DB_USER}
      PGPASSWORD: ${DB_REPL_PASSWORD}
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=db_master --port=5432
      do
        echo 'Waiting for primary to connect...'
        sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    depends_on:
      - db_master
volumes:
  replication_log:

